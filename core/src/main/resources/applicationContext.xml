<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:locations.properties</value>
                <value>classpath:locations-override.properties</value>
                <value>file:javabot.properties</value>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="true"/>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="false"/>
                <property name="generateDdl" value="true"/>
                <property name="databasePlatform" value="${hibernate.dialect}"/>
            </bean>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <context:annotation-config/>

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

    <bean class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
        <property name="transactionInterceptor" ref="transactionInterceptor"/>
    </bean>

    <bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="transactionAttributeSource">
            <bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
        </property>
    </bean>

    <bean id="apiDao" class="javabot.dao.impl.ApiDaoImpl"/>

    <bean id="configDao" class="javabot.dao.impl.ConfigDaoImpl"/>
    <bean id="defaultConfig" class="javabot.model.Config">
      <property name="nick" value="${javabot.nick}" />
      <property name="password" value="${javabot.password}" />
      <property name="server" value="${javabot.server}" />
      <property name="prefixes" value="${javabot.nick}" />
      <property name="port" value="${javabot.port}" />
    </bean>
    <bean id="defaultAdmin" class="javabot.model.Admin">
      <property name="userName" value="${javabot.admin.nick}" />
      <property name="hostName" value="${javabot.admin.hostmask}" />
    </bean>

    <bean id="factoidDao" class="javabot.dao.impl.FactoidDaoImpl"/>

    <bean id="changeDao" class="javabot.dao.impl.ChangeDaoImpl"/>

    <bean id="clazzDao" class="javabot.dao.impl.ClazzDaoImpl"/>

    <bean id="shunDao" class="javabot.dao.impl.ShunDaoImpl"/>

    <bean id="logDao" class="javabot.dao.impl.LogsDaoImpl"/>

    <bean id="channelDao" class="javabot.dao.impl.ChannelDaoImpl"/>

    <bean id="karmaDao" class="javabot.dao.impl.KarmaDaoImpl"/>

    <bean id="adminDao" class="javabot.dao.impl.AdminDaoImpl"/>

    <bean id="factoidTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail">
            <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
                <property name="targetObject" ref="factoidDao"/>
                <property name="targetMethod" value="pruneFactoids"/>
                <property name="concurrent" value="false"/>
            </bean>
        </property>
        <!-- run every morning at 1 AM -->
        <property name="cronExpression" value="* * * * * ?"/>
    </bean>

    <bean id="logTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail">
            <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
                <property name="targetObject" ref="logDao"/>
                <property name="targetMethod" value="pruneHistory"/>
                <property name="concurrent" value="false"/>
            </bean>
        </property>
        <!-- run every morning at 1 AM -->
        <property name="cronExpression" value="0 0 1 * * ?"/>
    </bean>

    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="factoidTrigger"/>
                <ref bean="logTrigger"/>
            </list>
        </property>
    </bean>
</beans>