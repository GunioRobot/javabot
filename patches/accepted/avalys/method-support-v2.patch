Index: javabot/javabot.dtd
===================================================================
--- javabot/javabot.dtd	(revision 57)
+++ javabot/javabot.dtd	(working copy)
@@ -11,7 +11,7 @@
 
 <!ELEMENT javadoc EMPTY>
 <!ATTLIST javadoc
-	source-list CDATA #REQUIRED
+	reference-xml CDATA #REQUIRED
 	base-url CDATA #REQUIRED
 >
 
Index: javabot/config.xml.sample
===================================================================
--- javabot/config.xml.sample	(revision 57)
+++ javabot/config.xml.sample	(working copy)
@@ -2,7 +2,7 @@
 <!DOCTYPE javabot SYSTEM "javabot.dtd">
 <javabot verbose="true">
 	<server name="irc.freenode.net" port="8001"/>
-	<javadoc source-list="srclist.txt" base-url="http://java.sun.com/j2se/1.4.2/docs/api/"/>
+	<javadoc reference-xml="docref.xml" base-url="http://java.sun.com/j2se/1.4.2/docs/api/"/>
 	<factoids filename="map.serialized" htmlfilename="factoids.html"
         factoidChangeLog="factoid.changelog"/>
 	<dict host="dict.org"/>
Index: javabot/src/javabot/operations/JavadocOperation.java
===================================================================
--- javabot/src/javabot/operations/JavadocOperation.java	(revision 57)
+++ javabot/src/javabot/operations/JavadocOperation.java	(working copy)
@@ -1,16 +1,16 @@
 package javabot.operations;
 
-import java.io.File;
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.List;
-
+import com.rickyclarkson.java.util.TypeSafeList;
 import javabot.BotEvent;
 import javabot.Javabot;
 import javabot.JavadocParser;
 import javabot.Message;
+import org.jdom.JDOMException;
 
-import com.rickyclarkson.java.util.TypeSafeList;
+import java.io.File;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
 
 /**
  * @author ricky_clarkson
@@ -48,6 +48,9 @@
 				{
 					throw new RuntimeException(exception);
 				}
+				catch (JDOMException exception) {
+					throw new RuntimeException(exception);
+				}
 			}
 			String key=message.substring
 				("javadoc ".length()).trim();
Index: javabot/src/javabot/JavadocParser.java
===================================================================
--- javabot/src/javabot/JavadocParser.java	(revision 57)
+++ javabot/src/javabot/JavadocParser.java	(working copy)
@@ -1,77 +1,37 @@
 package javabot;
 
-import java.io.BufferedReader;
+import javabot.javadoc.StructureReference;
+import org.jdom.JDOMException;
+
 import java.io.File;
-import java.io.FileReader;
 import java.io.IOException;
-import java.util.ArrayList;
-import java.util.HashMap;
 
 public class JavadocParser
 {
-	private HashMap map=new HashMap();
+	private StructureReference reference;
 
-	/**
-		@param file a file with lines referring to .java file names.
-	*/
-	public JavadocParser(File file,String baseUrl) throws IOException
-	{
-		this.baseUrl=baseUrl;
-		
-		FileReader fileReader=new FileReader(file);
-		BufferedReader reader=new BufferedReader(fileReader);
+	public  JavadocParser(File file, String baseUrl) throws IOException, JDOMException {
+		this.baseUrl = baseUrl;
+		reference = new StructureReference(file);
+	}
 
-		for(;;)
-		{
-			String name=reader.readLine();
-		
-			if (name==null)
-				break;
-
-			String fullName=name.substring
-				(0,name.length() - 5);
-				
-			String shortName=fullName.substring
-			(
-				fullName.lastIndexOf("/")+1,
-				fullName.length()
-			).toLowerCase();
-                
-			ArrayList list=(ArrayList)map.get(shortName);
-			
-			if (list==null)
-			{
-				list=new ArrayList(1);
-				map.put(shortName, list);
+	public String[] javadoc(String key) {
+		// Use presence of an open parentheses to indicate we're looking for a method
+		int openIndex = key.indexOf('(');
+		if (openIndex == -1) {
+			return reference.getClassDocUrls(key, baseUrl);
+		} else {
+			int finalIndex = key.lastIndexOf('.');
+			int closeIndex = key.indexOf(')');
+			if (closeIndex == -1) {
+				return new String[0];
 			}
-                
-			list.add(fullName);
+			String className = key.substring(0,finalIndex);
+			String methodName = key.substring(finalIndex+1,openIndex);
+			String signatureTypes = key.substring(openIndex+1,closeIndex);
+			return reference.getMethodDocUrls(className, methodName, signatureTypes, baseUrl);
 		}
-		
-		reader.close();
-		fileReader.close();
 	}
-    
-	public String[] javadoc(String className)
-	{
-		ArrayList list=(ArrayList)map.get(className.toLowerCase());
 
-		if (list == null)
-		{
-			return new String[0];
-		}
-		
-		String[] results=new String[list.size()];
-		
-		for (int i=0;i<list.size();i++)
-		{
-			String entry=(String)list.get(i);
-			String fullName=entry.replace('/','.');
-			results[i]=fullName+": "+baseUrl+entry+".html";
-        	}
-		
-		return results;
-	}
-    
 	private final String baseUrl;
 }
Index: javabot/src/javabot/Javabot.java
===================================================================
--- javabot/src/javabot/Javabot.java	(revision 57)
+++ javabot/src/javabot/Javabot.java	(working copy)
@@ -1,22 +1,5 @@
 package javabot;
 
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileOutputStream;
-import java.io.FileWriter;
-import java.io.IOException;
-import java.io.ObjectInputStream;
-import java.io.ObjectOutputStream;
-import java.io.PrintWriter;
-import java.util.ArrayList;
-import java.util.Date;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import java.util.TreeSet;
 import com.rickyclarkson.java.util.TypeSafeList;
 import javabot.operations.BotOperation;
 import org.jdom.Document;
@@ -26,6 +9,9 @@
 import org.jibble.pircbot.PircBot;
 import org.jibble.pircbot.User;
 
+import java.io.*;
+import java.util.*;
+
 public class Javabot extends PircBot {
     Map map = new HashMap();
     Map channelPreviousMessages = new HashMap();
@@ -145,7 +131,7 @@
 
     private void loadJavadocInfo(Element root) {
         Element javadocNode = root.getChild("javadoc");
-        javadocSources = javadocNode.getAttributeValue("source-list");
+        javadocSources = javadocNode.getAttributeValue("reference-xml");
         javadocBaseUrl = javadocNode.getAttributeValue("base-url");
     }
 
@@ -188,8 +174,6 @@
 
     public void onMessage(String channel, String sender, String login,
         String hostname, String message) {
-        String[] startStrings =
-            {"~", "javabot: ", "javabot, ", "javabot "};
         for(int a = 0; a < startStrings.length; a++) {
             int length = startStrings[a].length();
             if(message.startsWith(startStrings[a])) {
